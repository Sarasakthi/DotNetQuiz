@page "/quiz"
@inject IQuizService QuizService

@using ASP_NET_Quiz.Components.Models

<h3>Quiz</h3>

@if (!isQuizStarted)
{
    <label>Select Number of Questions:</label>
    <select @bind="selectedCount">
        @foreach (var count in questionCounts)
        {
            <option value="@count">@count</option>
        }
    </select>
    <button @onclick="StartQuiz">Start Quiz</button>
}
else if (currentQuestionIndex < questions.Count)
{
    <h4>Score: @score / @questions.Count</h4>

    <h5>@currentQuestion.Question</h5>
    <ul>
        @foreach (var option in currentQuestion.Options)
        {
            <li>
                <input type="radio" name="answer" @bind-value="selectedAnswer" />
                @option.OptionText
            </li>
        }
    </ul>

    <button @onclick="SubmitAnswer">Submit Answer</button>
}
else
{
    <h4>Quiz Completed!</h4>
    <h5>Your Score: @score / @questions.Count</h5>
}

@code {
    private List<int> questionCounts = new() { 5, 10, 15, 20 };
    private int selectedCount = 5;

    private List<QuizQuestionsModel> questions = new();
    private int currentQuestionIndex = 0;
    private int score = 0;
    private string selectedAnswer;

    private bool isQuizStarted = false;

    private QuizQuestionsModel currentQuestion => questions.ElementAtOrDefault(currentQuestionIndex);

    private async Task StartQuiz()
    {
        questions = await QuizService.GetQuestionsRandomByNumberOfQuestions(selectedCount);
        isQuizStarted = true;
    }

    private async Task SubmitAnswer()
    {
        bool isCorrect = selectedAnswer == currentQuestion.CorrectResponse;

        if (isCorrect)
        {
            score++;
        }

        await QuizService.SaveQuizResponseAsync(new QuizResponseModel
            {
                QuestionNumber = currentQuestion.QuestionNumber,
                UserResponse = selectedAnswer,
                IsCorrect = isCorrect
            });

        selectedAnswer = string.Empty;
        currentQuestionIndex++;
    }
}
